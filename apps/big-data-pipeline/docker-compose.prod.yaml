services:
  dagster:
    depends_on:
      - spark-iceberg
    image: ghcr.io/dargmuesli/web-kraken:0.1.0-beta.1
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - 3000:3000
      - 4040:4040
    restart: unless-stopped
  httpd:
    image: httpd:2.4.62-alpine
    ports:
      - 8008:80
    volumes:
      - ./orchestration/charts:/usr/local/apache2/htdocs
  minio:
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_DOMAIN: minio
      MINIO_ROOT_PASSWORD: password
      MINIO_ROOT_USER: admin
    image: minio/minio
    networks:
      default:
        aliases:
          - lakehouse.minio
    ports:
      - 9001:9001
      - 9000:9000
    restart: unless-stopped
    volumes:
      - minio_data:/data
  minio-client:
    depends_on:
      - minio
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/lakehouse;
      /usr/bin/mc anonymous set public minio/lakehouse;
      tail -f /dev/null
      "
    image: minio/mc
    restart: unless-stopped
  rest:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://lakehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
    image: ghcr.io/dargmuesli/iceberg-rest:1.6.1
    ports:
      - 8181:8181
    restart: unless-stopped
  spark-iceberg:
    image: ghcr.io/dargmuesli/spark-iceberg:3.5.3_1.6.1
    depends_on:
      - rest
      - minio
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    ports:
      - 8888:8888
      - 8080:8080
      - 10000:10000
      - 10001:10001
    restart: unless-stopped
    volumes:
      - ./docker/entrypoint-master.sh:/opt/spark/entrypoint.sh
  spark-iceberg-worker-1:
    image: ghcr.io/dargmuesli/spark-iceberg:3.5.3_1.6.1
    depends_on:
      - spark-iceberg
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    restart: unless-stopped
    volumes:
      - ./docker/entrypoint-worker.sh:/opt/spark/entrypoint.sh
  spark-iceberg-worker-2:
    image: ghcr.io/dargmuesli/spark-iceberg:3.5.3_1.6.1
    depends_on:
      - spark-iceberg
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    restart: unless-stopped
    volumes:
      - ./docker/entrypoint-worker.sh:/opt/spark/entrypoint.sh
volumes:
  minio_data: {}
